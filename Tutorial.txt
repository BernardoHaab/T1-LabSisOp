1. No diretório Buildroot, habilite o suporte a C++
	$ make menuconfig
		Toolchain -> [*] Enable C++ support

	Salve as configurações e selecione exit

2. Habilite o suporte a rede e filesystem
	$ make linux-menuconfig
		Device Drivers
			Network device support
				(*)Intel PRO/1000 Gigabit Ethernet support

3. Adicione o arquivo server.cpp ao diretório Buildroot
	Ex: linuxdistro/buildroot/package/server/

4. Dentro do diretório package/server/, crie um Config.in e server.mk

	server.mk:
		SERVER_VERSION = 1.0
		SERVER_SITE = $(TOPDIR)/package/server
		SERVER_SOURCE = server.cpp

		define SERVER_BUILD_CMDS
			$(HOSTCC) $(SERVER_SOURCE) -o $(TARGET_DIR)/usr/bin/server
		endef

		$(eval $(generic-package))

	Config.in:
		config BR2_PACKAGE_SERVER
   		bool "server"
    		help
      			A custom server for the Buildroot target.

5. Adicione a linha 'source "package/server/Config.in"' ao arquivo Config.in

6. Adicione o script de inicialização em package/server/S99server:
	#!/bin/sh
	case "$1" in
   	 	start)
        		/usr/bin/server &
       			 ;;
    		stop)
       			killall server
        		;;
    		*)
        		echo "Usage: $0 {start|stop}"
       			 exit 1
	esac
	exit 0

6. Adicione permissão de execução:
	$ chmod +x package/server/S99server

7. Compile o Sistema
	$ make clean
	$ make

8. Rode a distribuição no QEMU:
	$ qemu-system-i386 --kernel output/images/bzImage --hda output/images/rootfs.ext2 --nographic --append "console=ttyS0 root=/dev/sda"

9. Uma vez que o sistema seja inicializado no QEMU, o servidor web deve estar em execução. Abra um navegador de internet na sua máquina host e navegue até o IP do guest no QEMU (que pode ser obtido da configuração de rede):
http://<IPguest>:8080